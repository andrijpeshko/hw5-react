{"version":3,"file":"static/js/362.38a22334.chunk.js","mappings":"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","sources":["components/Spinner/Spinner.js","API/getMoviesDetails.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Spinner = () => (\n  <RotatingLines\n    strokeColor=\"brown\"\n    strokeWidth=\"5\"\n    animationDuration=\"0.75\"\n    width=\"400\"\n    visible={true}\n  />\n);\n\nexport default Spinner;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\n\nconst getMoviesDetails = async id => {\n  try {\n    const response = await axios.get(`${URL}3/movie/${id}?api_key=${KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getMoviesDetails;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const BtnBack = styled.button`\n  width: ${props => props.theme.space[8]}px;\n  padding: ${props => props.theme.space[3]}px;\n  margin: ${props => props.theme.space[4]}px;\n  font-size: ${props => props.theme.fontSizes[5]}px;\n  color: ${props => props.theme.colors.primary};\n  background-color: ${props => props.theme.colors.colorBtnHover};\n  border: ${props => props.theme.borders.heading};\n  font-family: 'Rubik Bubbles', cursive;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.colorBtnHover};\n    background-color: ${props => props.theme.colors.primary};\n    box-shadow: ${props => props.theme.shadows.boxShadow};\n  }\n`;\n\nexport const MovieDetailsImg = styled.div`\n  padding: ${props => props.theme.space[4]}px;\n`;\n\nexport const MovieDetailsTitle = styled.h1`\n  font-family: 'Montserrat', sans-serif;\n  font-size: ${props => props.theme.fontSizes[6]}px;\n  color: ${props => props.theme.colors.primary};\n`;\n\n\nexport const MovieDetailsWrap = styled.div`\n display: flex;\n`;\n\nexport const MovieDetailsText = styled.div`\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-family: 'Montserrat', sans-serif;\n  color: ${props => props.theme.colors.primary};\n  font-size: ${props => props.theme.fontSizes[4]}px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  width: ${props => props.theme.space[8]}px;\n  padding: ${props => props.theme.space[3]}px;\n  margin: ${props => props.theme.space[5]}px;\n  font-size: ${props => props.theme.fontSizes[4]}px;\n  color: ${props => props.theme.colors.primary};\n  background-color: ${props => props.theme.colors.colorBtnHover};\n  border: ${props => props.theme.borders.heading};\n  font-family: 'Rubik Bubbles', cursive;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.colorBtnHover};\n    background-color: ${props => props.theme.colors.primary};\n    box-shadow: ${props => props.theme.shadows.boxShadow};\n  }\n`;\n\nexport const NavLinkWrap = styled.li`\nlist-style: none;`\n\nexport const NavLinkBlock = styled.ul`\ndisplay: flex;\n`","import {\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport getMoviesDetails from 'API/getMoviesDetails';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BtnBack,\n  MovieDetailsImg,\n  MovieDetailsTitle,\n  MovieDetailsWrap,\n  MovieDetailsText,\n  NavItem,\n  NavLinkWrap,\n  NavLinkBlock,\n} from './MovieDetails.styled';\nimport defaultPic from 'Image/default_picture.jpg';\nimport Spinner from 'components/Spinner/Spinner';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const pathname = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMoviesDetails(id)\n      .then(setMovie).then(setIsLoading(false))\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, [id]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const onGoBackClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n  const { title, vote_average, overview, genres, poster_path } = movie;\n  const vote = Math.round(vote_average);\n  const genreSet = genres.map(ganre => ganre.name).join(', ');\n   const checkPic = poster_path ? `${pathname}${poster_path}` : defaultPic;\n\n  return (\n    <div>\n      <div>\n        <BtnBack type=\"button\" onClick={onGoBackClick}>\n          &#11013; GO BACK\n        </BtnBack>\n      </div>\n      <MovieDetailsWrap>\n        <MovieDetailsImg>\n          <img src={checkPic} alt=\"movie\" width=\"400px\" heigth=\"\"/>\n        </MovieDetailsImg>\n        <MovieDetailsText>\n          <MovieDetailsTitle>{title}</MovieDetailsTitle>\n          <p>User score: &#11088; {vote}</p>\n          <p>{overview}</p>\n          <p>{genreSet}</p>\n          <NavLinkBlock>\n            <NavLinkWrap>\n              <NavItem to=\"cast\">&#127871; CAST</NavItem>\n            </NavLinkWrap>\n            <NavLinkWrap>\n              <NavItem to=\"rewievs\">&#127871; REWIEVS</NavItem>\n            </NavLinkWrap>\n          </NavLinkBlock>\n        </MovieDetailsText>\n      </MovieDetailsWrap>\n     {isLoading && <Spinner/>}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n MovieDetails.propTypes = {\n   movie: PropTypes.arrayOf(\n     PropTypes.shape({\n       id: PropTypes.number.isRequired,\n       title: PropTypes.string.isRequired,\n       vote: PropTypes.string.isRequired,\n       overview: PropTypes.string.isRequired,\n       genreSet: PropTypes.string.isRequired,\n     })\n   ),\n };\n\n\n    \n\n\n"],"names":["strokeColor","strokeWidth","animationDuration","width","visible","getMoviesDetails","id","axios","response","data","console","log","BtnBack","styled","props","theme","space","fontSizes","colors","primary","colorBtnHover","borders","heading","shadows","boxShadow","MovieDetailsImg","MovieDetailsTitle","MovieDetailsWrap","MovieDetailsText","NavItem","NavLink","NavLinkWrap","NavLinkBlock","useParams","useState","movie","setMovie","isLoading","setIsLoading","navigate","useNavigate","location","useLocation","useEffect","then","catch","error","title","vote_average","overview","genres","poster_path","vote","Math","round","genreSet","map","ganre","name","join","checkPic","defaultPic","type","onClick","state","from","src","alt","heigth","to","Spinner"],"sourceRoot":""}