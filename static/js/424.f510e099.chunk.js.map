{"version":3,"file":"static/js/424.f510e099.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesSet/MovieSet.styled.js","components/MoviesSet/MovieSet.jsx","components/Spinner/Spinner.js","API/getSearchMovies.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const MovieItemCard = styled.li`\n  width: 250px;\n  heigth: 450px;\n  margin: 10px;\n  position: relative;\n  list-style: none;\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n    box-shadow: ${props => props.theme.shadows.boxShadow};\n    border: ${props => props.theme.borders.light};\n  }\n`;\n\nexport const MovieItemTitle = styled.h1`\n  font-family: 'Montserrat', sans-serif;\n  font-size: ${props => props.theme.fontSizes[2]}px;\n  color: ${props => props.theme.colors.primary};\n  margin: 0 auto;\n  height: 70px;\n \n`;\n\nexport const MovieItemScore = styled.p`\nposition: absolute;\nbottom: 5px;\nmargin: 0 auto;\n`\n\nexport const MovieItemLink = styled(NavLink)`\n  text-decoration: none;\n`;","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {\n  MovieItemCard,\n  MovieItemTitle,\n  MovieItemScore,\n  MovieItemLink,\n} from './MovieItem.styled';\n\n\nconst MovieItem = ({ id, src, title, vote }) => {\n  const location = useLocation();\n\n  return (\n    <MovieItemCard key={id} title={title}>\n      <MovieItemLink to={`/movies/${id}`} state={{ from: location }}>\n        <img src={src} alt={title} width=\"250\" height=\"350\" />\n        <MovieItemTitle>{title}</MovieItemTitle>\n      </MovieItemLink>\n      <MovieItemScore>User score: &#11088; {Math.round(vote)}</MovieItemScore>\n    </MovieItemCard>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n}\n\n\n","import styled from \"styled-components\";\n\nexport const MovieList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;`","import MovieItem from \"components/MovieItem/MovieItem\";\nimport PropTypes from 'prop-types';\nimport defaultPic from 'Image/default_picture.jpg';\nimport { MovieList } from \"./MovieSet.styled\";\n\n\nconst MovieSet = ({ movies }) => {\n  const pathname = 'https://image.tmdb.org/t/p/w500';\n  \n  return (\n    <MovieList>\n      {movies.map(({ id, poster_path, title, vote_average }) => {\n        const checkPic = poster_path ? `${pathname}${poster_path}` : defaultPic;\n        return (\n          <MovieItem\n            key={id}\n            id={id}\n            src={checkPic}\n            title={title}\n            vote={vote_average}\n          >\n            {title}\n          </MovieItem>\n        );\n      })}\n    </MovieList>\n  );\n};\n\n  MovieSet.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n      })\n    ),\n  };\n\n\nexport default MovieSet;\n\n","\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Spinner = () => (\n  <RotatingLines\n    strokeColor=\"brown\"\n    strokeWidth=\"5\"\n    animationDuration=\"0.75\"\n    width=\"400\"\n    visible={true}\n  />\n);\n\nexport default Spinner;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\nconst LANGUAGE = 'en-US';\nconst PAGE = 1;\n\nconst getSearchMovies = async (searchMovie) => {\n  try {\n    const response = await axios.get(\n      `${URL}3/search/movie?api_key=${KEY}&query=${searchMovie}&language=${LANGUAGE}&page=${PAGE}&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getSearchMovies;\n\n","import styled from \"styled-components\";\nimport {Form, Field } from 'formik';\n\nexport const FormWrap = styled(Form)`\npadding-top: 90px;\nalign-item: center;\njustify-content: center;\nflex-wrap: nowrap;`;\n\nexport const Input = styled(Field)`\n  width: 500px;\n  padding: ${props => props.theme.space[3]}px;\n  margin-left: ${props => props.theme.space[8]}px;\n  font-size: ${props => props.theme.fontSizes[4]}px;\n  color: ${props => props.theme.colors.primary};\n  background-color: ${props => props.theme.colors.colorBtnHover};\n  border: ${props => props.theme.borders.heading};\n  font-family: 'Rubik Bubbles', cursive;\n`;\n\nexport const BtnSearch = styled.button`\n  width: ${props => props.theme.space[8]}px;\n  padding: ${props => props.theme.space[3]}px;\n  margin: ${props => props.theme.space[3]}px;\n  font-size: ${props => props.theme.fontSizes[4]}px;\n  color: ${props => props.theme.colors.primary};\n  background-color: ${props => props.theme.colors.colorBtnHover};\n  border: ${props => props.theme.borders.heading};\n  font-family: 'Rubik Bubbles', cursive;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.colorBtnHover};\n    background-color: ${props => props.theme.colors.primary};\n    box-shadow: ${props => props.theme.shadows.boxShadow};\n  }\n`;\n\n\n\n","\nimport { useState, useEffect } from 'react';\nimport {useSearchParams } from 'react-router-dom';\nimport getSearchMovies from 'API/getSearchMovies';\nimport { ToastContainer, toast } from 'react-toastify';\nimport MovieSet from 'components/MoviesSet/MovieSet';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { FormWrap, Input, BtnSearch } from './Movies.styled';\nimport  SharedLayout  from 'components/SharedLayout/SharedLayout';\nimport Spinner from 'components/Spinner/Spinner';\n\n\n \n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  console.log(movies);\n\n  \n  useEffect(() => {\n    setIsLoading(true);\n    if (searchParams.get('searchMovie') === null) {\n      setIsLoading(false);\n      return;\n    }\n    const searchRes = searchParams.get('searchMovie');\n    getSearchMovies(searchRes)\n      .then(response => {\n        if (response.results.length === 0) {\n          return toast.warn(\"We couldn't find result on your request.\", {\n            position: 'top-right',\n            autoClose: 3000,\n            theme: 'colored',\n          });\n        }\n        setMovies(response.results);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, [query, searchParams])\n\n   const handleChange = e => {\n     setQuery(e.currentTarget.value.toLowerCase());\n   };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast.error(\n        'Field for searching is empty. Add information for request.',\n        {\n          position: 'top-right',\n          autoClose: 3000,\n          theme: 'colored',\n        }\n      );\n    }\n    setSearchParams({ searchMovie:query });\n    setQuery('');\n  };\n\n\n  return (\n    <div>\n      <SharedLayout />\n      <ToastContainer />\n      <Formik>\n        <FormWrap onSubmit={handleSubmit}>\n          <label>\n            <Input\n              type=\"text\"\n              placeholder=\"Search your favorite movie\"\n              name=\"searchMovie\"\n              value={query}\n              onChange={handleChange}\n            ></Input>\n          </label>\n          <BtnSearch type=\"submit\">Search</BtnSearch>\n        </FormWrap>\n      </Formik>\n      {isLoading && <Spinner />}\n      <MovieSet movies={movies} />\n    </div>\n  );\n      }\n\nexport default Movies;\n\n Movies.propTypes = {\n   movies: PropTypes.arrayOf(PropTypes.shape({})),\n };\n"],"names":["MovieItemCard","styled","props","theme","shadows","boxShadow","borders","light","MovieItemTitle","fontSizes","colors","primary","MovieItemScore","MovieItemLink","NavLink","id","src","title","vote","location","useLocation","to","state","from","alt","width","height","Math","round","MovieList","movies","map","poster_path","vote_average","checkPic","defaultPic","strokeColor","strokeWidth","animationDuration","visible","getSearchMovies","searchMovie","axios","response","data","console","log","FormWrap","Form","Input","Field","space","colorBtnHover","heading","BtnSearch","Movies","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","useEffect","get","searchRes","then","results","length","toast","position","autoClose","catch","error","SharedLayout","onSubmit","e","preventDefault","trim","type","placeholder","name","value","onChange","currentTarget","toLowerCase","Spinner","MovieSet"],"sourceRoot":""}